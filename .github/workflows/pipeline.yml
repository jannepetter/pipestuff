name: build, tests and deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:

  check_skip_tag:
    runs-on: ubuntu-20.04
    outputs:
      should_skip: ${{ steps.check.outputs.should_skip }}
    steps:
      - uses: actions/checkout@v4
      - name: grabbing skip msg
        id: check
        run: |
          if git log -1 --pretty=%B | grep -q '#skip'; then
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

  build_and_run_tests:
    timeout-minutes: 5
    runs-on: ubuntu-20.04
    env:
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies and build
        run: ./build_step.sh

      - name: Check backend style
        run: npm run lint

      - name: Check frontend style
        run: cd frontend && npm run lint && cd ..

      - name: start test env
        run: npm run start:test & sleep 5

      - name: run backend tests
        run: npm run test

      - name: run frontend tests
        run: cd frontend && npm run test && cd ..

  #     - if: github.event_name == 'push' && needs.check_skip_tag.outputs.should_skip == 'false'
  #       name: deploy to render
  #       run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  # tag_release:
  #   needs: [build_and_run_tests, check_skip_tag]
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     - if: github.event_name == 'push' && needs.check_skip_tag.outputs.should_skip == 'false'
  #       name: Bump version and push tag
  #       uses: anothrNick/github-tag-action@1.67.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         DEFAULT_BUMP: patch

  # notify_job:
  #   needs: [build_and_run_tests, tag_release]
  #   runs-on: ubuntu-20.04
  #   if: always()
  #   steps:
  #     - name: Build Failure
  #       uses: rjstone/discord-webhook-notify@v1
  #       if: needs.build_and_run_tests.result == 'failure' || needs.tag_release == 'failure'
  #       with:
  #         severity: error
  #         details: Build Failed!
  #         webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  #     - name: Build Success
  #       uses: rjstone/discord-webhook-notify@v1
  #       if: needs.build_and_run_tests.result == 'success' || needs.tag_release == 'success'
  #       with:
  #         severity: info
  #         details: Build Succeeded!
  #         webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}